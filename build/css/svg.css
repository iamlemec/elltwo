@import "./gum/fonts.css";

#SVGEditorOuter {
    position: fixed;
    display: flex;
    visibility: hidden;
    flex-direction: column;
    background: var(--bg-col);
    width: 100%;
    height: calc(100% - 27.5px);
    top: 0;
    left: 0;
    border-bottom: 1px solid gray;
    font-size: 125%;
    z-index: 2;
}

#SVGWidthControl{
    width: 2px;
    background-color: var(--hl-col);
    cursor:  col-resize;
    z-index: 10;
}

#SVGEditorBox {
    display: flex;
    height: 100%;
    width: 100%;
}

#SVGEditorNav {
    display: flex;
    flex: 0 1 auto;
    flex-direction: column;
    justify-content: flex-end;
    width: 100%;
    padding: 5px;
    font-size: 80%;
    background-color: var(--bg-hl2-col);
    font-family: 'Open Sans', sans-serif;
}

#SVGEditorNavUp, #SVGEditorNavDown {
    background: var(--bg-hl2-col);
    width: 100%;
    display: flex;
    font-size: 80%;
}

#SVGEditorNavUp {
    padding-bottom: 5px;
}

#SVGEditorTag, #SVGEditorKW {
    background-color: var(--bg-hl-col);
    color: var(--font-col);
    width: 60%;
    margin-right: 5px;
    flex-grow: 2;
    height: 35px;
}

.toggle {
    font-size: 100%;
    margin: 0 10px 0 10px;
}

#SVGEditorNav .foot_butt {
    line-height: 20px;
    margin-bottom: 0;
    margin-left: 0;
}

#SVGEditorNav .foot_butt:last-child {
    margin-right: 0;
}

#SVGEditorBoxLeft {
    width: 50%;
    height: 100%;
}

#SVGEditorInputText, #SVGEditorInputView {
    white-space: pre-wrap;
    position: absolute;
    font-family: monospace;
    font-size: 75%;
    height: 100%;
    width: 100%;
    padding: 10px;
    padding-left: 30px;
    overflow: scroll;
}

#SVGEditorInputBox {
    position: relative;
    height: 50%;
    width: 100%;
    overflow: scroll;
    scrollbar-width: none;

}

#SVGEditorInputBox.fullsize{
    height: 100%;
}

#SVGEditorInputView {
    background-color: var(--bg-col);
    counter-reset: line;
    -webkit-box-shadow:inset 25px 0px 0px 0px rgba(0,0,0,.15);
}

#SVGEditorInputText {
    color: rgba(0,0,0,0);
    background-color: rgba(0,0,0,0);
    z-index: 2;
}

.code:not(.numbered) .linenum{
    display: none;
}

.linenum {
    position: absolute;
    text-align: right;
    width: 20px;
    left: 0;
    font-size: 100%;
    opacity: .3;
}

.para .linenum{
   width: 28px;
}

.linenum:before {
  counter-increment: line;
  content: counter(line);
}

#SVGEditorParsedView, #SVGEditorParsed {
    white-space: pre-wrap;
    background-color: var(--bg-col);
    color: var(--font-col);
    border-top: 1px solid var(--hl-col);
    font-family: monospace;
    font-size: 80%;
    position: relative;
    top: 0%;
    width: 100% !important;
    height: 50% !important;
    padding: 10px;
    padding-left: 30px;
    -webkit-box-shadow:inset 25px 0px 0px 0px rgba(0,0,0,.15);
    overflow: scroll;
    counter-reset: line;
}

#SVGEditorParsedView{
    top: -50%;
}

#SVGEditorOuter textarea::placeholder,
#SVGEditorOuter input::placeholder {
    font-size: 100%;
}

.checkMark svg {
    width: 20px;
    height: 20px;
}

/* RIGHT  */

#SVGEditorBoxRight {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 50%;
    height: 100%;
    padding: 20px;
    background: var(--bg-hl-col);
    border-left: 1px solid gray;
}

#SVGEditorOutput {
    display: flex;
    flex: 1 1 auto;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 50%; /* works somehow */
}

#SVGEditorOutput svg {
    max-height: 80%;
}

#SVGEditorOutput svg,
.img_cont svg {
    fill: none;
    stroke: var(--font-col);
    background-color: var(--bg-col);
}

.input_err {
    border: 1px solid var(--hl2-col);
}

/* cursor lag hack for firefox */

@-moz-document url-prefix() {
    #SVGEditorInputText {
        color: rgba(0, 0, 0, 0.01);
    }
}

/* IINTERACTIVE */

#interActiveControl {
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    width: 100%;
    height: 30%;
    overflow-y: scroll;
}

.var_cont {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: calc(100% - 60px);
    margin-left: 30px;
    margin-top: 10px;
    margin-bottom: 10px;
    background-color: var(--brace-col);
    border-radius: 10px;
}

.var_title {
    position: relative;
    font-family: monospace;
    font-size: 60%;
    margin-bottom: 5px;
    line-height: 20px;
    background-color: rgba(0,0,0,.1);
    width: 100%;
    text-indent: 30px;
    border-radius: 10px 10px 0 0;
}

/* slider */

.slider {
    width: 80%;
    margin-bottom: 15px;
    margin-top: 20px;
}

input[type=range] {
  position: relative;
  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */
  width: 100%; /* Specific width is required for Firefox. */
  background: transparent; /* Otherwise white in Chrome */
}

input[type=range]::-moz-range-track {
  width: 100%;
  height: 2px;
  cursor: pointer;
  visibility: hidden;
}

input[type=range]::-moz-range-thumb {
  visibility: hidden;
  height: 30px;
  width: 30px;
  border-radius: 50%;
  cursor: pointer;
}

.phantom_track_wrap{
    display: flex;
    margin-bottom: -40px;
    width: calc(100% + 30px);
    transform: translateX(-15px)
}

.phantom_track {
    width: 100%;
    height: 1.5px;
    background-color: var(--hl-col);
}

.min_lim, .max_lim {
    color: var(--hl-col);
    font-size: 10px;
    line-height: 1.5px;
}

.min_lim{
    text-align: right;
    margin-right: 15px;
}

.max_lim{
    text-align: left;
    margin-left: 15px;
}



.slider_label {
    position: relative;
    transform-origin: center center;
    display: block;
    width: 30px;
    height: 30px;
    background: var(--bg-hl2-col);
    border-radius: 50%;
    line-height: 25px;
    text-align: center;
    padding-top: 2px;
    box-sizing: border-box;
    border: 1px solid var(--font-col-int);
    left: 50%;
    top: 26px;
    color: var(--font-col-int);
    font-size: 15px;
}

/* toggle Interactive */

.toggle_cont .toggle{
    margin: 10px;
}

/* list interctive */

.list_cont .custom-select-wrapper{
    position: unset !important;
}
