let syms = [
'Alpha',
'beta',
'Gamma',
'Delta',
'Epsilon',
'Zeta',
'Eta',
'Theta',
'Iota',
'Kappa',
'Lambda',
'Mu',
'Nu',
'Xi',
'Omicron',
'Pi',
'Rho',
'Sigma',
'Tau',
'Upsilon',
'Phi',
'Chi',
'Psi',
'Omega',
'varGamma',
'varDelta',
'varTheta',
'varLambda',
'varXi',
'varPi',
'varSigma',
'varUpsilon',
'varPhi',
'varPsi',
'varOmega  ',
'alpha',
'beta',
'gamma',
'delta',
'epsilon',
'zeta',
'eta',
'theta',
'iota',
'kappa',
'lambda',
'mu',
'nu',
'xi',
'omicron',
'pi',
'rho',
'sigma',
'tau',
'upsilon',
'phi',
'chi',
'psi',
'omega',
'varepsilon',
'varkappa',
'vartheta',
'thetasym',
'varpi',
'varrho',
'varsigma',
'varphi',
'digamma',
'imath',
'nabla',
'Im',
'Reals',
'jmath',
'partial',
'image',
'wp',
'aleph',
'Game',
'weierp',
'alef',
'Finv',
'alefsym',
'cnums',
'natnums',
'beth',
'Complex',
'gimel',
'ell',
'Re',
'daleth',
'hbar',
'real',
'uparrow',
'lbrack',
'rbrack',
'lfloor',
'rfloor',
'downarrow',
'lbrace',
'rbrace',
'lmoustache',
'rmoustache',
'updownarrow',
'langle',
'rangle',
'vert',
'ulcorner',
'lceil',
'rceil',
'Downarrow',
'Vert',
'llcorner',
'lrcorner ',
'Updownarrow',
'lvert',
'lVert',
'rVert',
'backslash',
'lang',
'rang',
'lt',
'gt',
'llbracket',
'rrbracket',
'llbracket',
'rrbracket',
'rBrace',
'lBrace',
'forall',
'complement',
'therefore',
'emptyset',
'exists',
'subset',
'because',
'empty',
'exist',
'supset',
'mapsto',
'varnothing',
'nexists',
'mid',
'to',
'implies',
'in',
'land',
'gets',
'impliedby',
'isin',
'lor',
'leftrightarrow',
'iff',
'notin',
'ni',
'notni',
'neg',
'lnot',
'sum',
'prod',
'bigotimes',
'bigvee',
'int',
'coprod',
'bigoplus',
'bigwedge',
'iint',
'intop',
'bigodot',
'bigcap',
'iiint',
'smallint',
'biguplus',
'bigcup',
'oint',
'oiint',
'oiiint',
'oiiint',
'bigsqcup',
'cdot',
'gtrdot',
'cdotp',
'intercal',
'pod',
'centerdot',
'rhd',
'circ',
'leftthreetimes',
'rightthreetimes',
'amalg',
'circledast',
'ldotp',
'rtimes',   
'And',
'circledcirc',
'setminus',
'ast',
'circleddash',
'lessdot',
'smallsetminus',
'barwedge',
'Cup',
'lhd',
'sqcap',
'bigcirc',
'cup',
'ltimes',
'sqcup',
'curlyvee',
'times',
'boxdot',
'curlywedge',
'mp',
'unlhd',
'boxminus',
'div',
'odot',
'unrhd',
'boxplus',
'divideontimes',
'ominus',
'uplus',
'boxtimes',
'dotplus',
'oplus',
'vee',
'bullet',
'doublebarwedge',
'otimes',
'veebar',
'Cap',
'doublecap',
'oslash',
'wedge',
'cap',
'doublecup',
'pm',
'plusmn',
'wr',
'arcsin',
'cosec',
'deg',
'sec',
'arccos',
'cosh',
'dim',
'sin',
'arctan',
'cot',
'exp',
'sinh',
'arctg',
'cotg',
'hom',
'sh',
'arcctg',
'coth',
'ker',
'tan',
'arg',
'csc',
'lg',
'tanh',
'ch',
'ctg',
'ln',
'tg',
'cos',
'cth',
'log',
'th',
'argmax',
'injlim',
'min',
'varinjlim',
'argmin',
'lim',
'plim',
'varliminf',
'det',
'liminf',
'Pr',
'varlimsup',
'gcd',
'limsup',
'projlim',
'varprojlim',
'inf',
'max',
'sup',
'limits',
'sqrt',
'doteqdot',
'lessapprox',
'smile',
'eqcirc',
'lesseqgtr',
'sqsubset',
'eqcolon',
'minuscolon',
'lesseqqgtr',
'sqsubseteq',
'Eqcolon',
'minuscoloncolon',
'lessgtr',
'sqsupset',
'approx',
'eqqcolon',
'equalscolon',
'lesssim',
'sqsupseteq',
'approxcolon',
'Eqqcolon',
'equalscoloncolon',
'll',
'Subset',
'approxcoloncolon',
'eqsim',
'lll',
'subset',
'sub',
'approxeq',
'eqslantgtr',
'llless',
'subseteq',
'sube',
'asymp',
'eqslantless',
'lt',
'subseteqq',
'backepsilon',
'equiv',
'mid',
'succ',
'backsim',
'fallingdotseq',
'models',
'succapprox',
'backsimeq',
'frown',
'multimap',
'succcurlyeq',
'between',
'ge',
'origof',
'succeq',
'bowtie',
'geq',
'owns',
'succsim',
'bumpeq',
'geqq',
'parallel',
'Supset',
'Bumpeq',
'geqslant',
'perp',
'supset',
'circeq',
'gg',
'pitchfork',
'supseteq',
'supe',
'colonapprox',
'ggg',
'prec',
'supseteqq',
'Colonapprox',
'coloncolonapprox',
'gggtr',
'precapprox',
'thickapprox',
'coloneq',
'colonminus',
'gt',
'preccurlyeq',
'thicksim',
'Coloneq',
'coloncolonminus',
'gtrapprox',
'preceq',
'trianglelefteq',
'coloneqq',
'colonequals',
'gtreqless',
'precsim',
'triangleq',
'Coloneqq',
'coloncolonequals',
'gtreqqless',
'propto',
'trianglerighteq',
'colonsim',
'gtrless',
'risingdotseq',
'varpropto',
'Colonsim',
'coloncolonsim',
'gtrsim',
'shortmid',
'vartriangle',
'cong',
'imageof',
'shortparallel',
'vartriangleleft',
'curlyeqprec',
'in',
'isin',
'sim',
'vartriangleright',
'curlyeqsucc',
'Join',
'simcolon',
'vcentcolon',
'ratio',
'dashv',
'le',
'simcoloncolon',
'vdash',
'dblcolon',
'coloncolon',
'leq',
'simeq',
'vDash',
'doteq',
'leqq',
'smallfrown',
'Vdash',
'Doteq',
'leqslant',
'smallsmile',
'Vvdash',
'not',
'gnapprox',
'ngeqslant',
'nsubseteq',
'precneqq',
'gneq',
'ngtr',
'nsubseteqq',
'precnsim',
'gneqq',
'nleq',
'nsucc',
'subsetneq',
'gnsim',
'nleqq',
'nsucceq',
'subsetneqq',
'gvertneqq',
'nleqslant',
'nsupseteq',
'succnapprox',
'lnapprox',
'nless',
'nsupseteqq',
'succneqq',
'lneq',
'nmid',
'ntriangleleft',
'succnsim',
'lneqq',
'notin',
'ntrianglelefteq',
'supsetneq',
'lnsim',
'notni',
'ntriangleright',
'supsetneqq',
'lvertneqq',
'nparallel',
'ntrianglerighteq',
'varsubsetneq',
'ncong',
'nprec',
'nvdash',
'varsubsetneqq',
'ne',
'npreceq',
'nvDash',
'varsupsetneq',
'neq',
'nshortmid',
'nVDash',
'varsupsetneqq',
'ngeq',
'nshortparallel',
'nVdash',
'ngeqq',
'nsim',
'precnapprox',
'circlearrowleft',
'leftharpoonup',
'rArr',
'circlearrowright',
'leftleftarrows',
'rarr',
'curvearrowleft',
'leftrightarrow',
'restriction',
'curvearrowright',
'Leftrightarrow',
'rightarrow',
'Darr',
'leftrightarrows',
'Rightarrow',
'dArr',
'leftrightharpoons',
'rightarrowtail',
'darr',
'leftrightsquigarrow',
'rightharpoondown',
'dashleftarrow',
'Lleftarrow',
'rightharpoonup',
'dashrightarrow',
'longleftarrow',
'rightleftarrows',
'Longleftarrow',
'rightleftharpoons',
'Downarrow',
'longleftrightarrow',
'rightrightarrows',
'downdownarrows',
'Longleftrightarrow',
'rightsquigarrow',
'downharpoonleft',
'longmapsto',
'Rrightarrow',
'downharpoonright',
'longrightarrow',
'Rsh',
'gets',
'Longrightarrow',
'searrow',
'Harr',
'looparrowleft',
'swarrow',
'hArr',
'looparrowright',
'to',
'harr',
'Lrarr',
'twoheadleftarrow',
'hookleftarrow',
'lrArr',
'twoheadrightarrow',
'hookrightarrow',
'lrarr',
'Uarr',
'Lsh',
'uArr',
'impliedby',
'mapsto',
'uarr',
'implies',
'nearrow',
'Larr',
'nleftarrow',
'Uparrow',
'lArr',
'nLeftarrow',
'larr',
'nleftrightarrow',
'leadsto',
'nLeftrightarrow',
'upharpoonleft',
'leftarrow',
'nrightarrow',
'upharpoonright',
'Leftarrow',
'nRightarrow',
'upuparrows',
'leftarrowtail',
'nwarrow',
'leftharpoondown',
'Rarr',
 ];

 let ops = [
{name:'operatorname{}', disp_name:'operatorname', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:1},
{name:'mod{}', disp_name:'mod', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:1},
{name:'pmod{}', disp_name:'pmod ', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:1},
{name:'operatorname*{}', disp_name:'operatorname*' ,type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:1},
{name:'operatornamewithlimits{}', disp_name:'operatornamewithlimits', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:1},
{name:'begin{matrix}\n\n\\end{maxtix}', disp_name:'matrix', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:13},
{name:'begin{pmatrix}\n\n\\end{pmaxtix}', disp_name:'pmatrix', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:14},
{name:'begin{vmatrix}\n\n\\end{vmaxtix}', disp_name:'vmatrix', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:14},
{name:'begin{Bmatrix}\n\n\\end{Bmaxtix}', disp_name:'Bmatrix', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:14},
{name:'begin{smallmatrix}\n\n\\end{smallmaxtix}', disp_name:'smallmatrix', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:18},
{name:'begin{cases}\n\n\\end{cases}', disp_name:'cases', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:12},
{name:'begin{equation*}\n\n\\end{equation*}', disp_name:'equation', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:16},
{name:'begin{gather*}\n\n\\end{gather*}', disp_name:'gather', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:14},
{name:'begin{align*}\n\n\\end{align*}', disp_name:'align', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:13},
{name:'begin{CD}\n\n\\end{CD}', disp_name:'CD', type:'cmd_opt', sym:`\\ \\{\\cdot\\}`, offset_chars:9},
{name:'frac{}{}', disp_name:'frac', type:'cmd_opt', sym:`\\frac {\\{\\cdot\\}}{\\{\\cdot\\}}`, offset_chars:3},
{name:'tfrac{}{}', disp_name:'tfrac', type:'cmd_opt', sym:`\\frac {\\{\\cdot\\}}{\\{\\cdot\\}}`, offset_chars:3},
{name:'dfrac{}{}', disp_name:'dfrac', type:'cmd_opt', sym:`\\tfrac {\\{\\cdot\\}}{\\{\\cdot\\}}`, offset_chars:3},
{name:'cfrac{}{}', disp_name:'cfrac', type:'cmd_opt', sym:`\\dfrac {\\{\\cdot\\}}{\\{\\cdot\\}}`, offset_chars:3},


 ];

 let tex_cmd  = {'syms': syms, 'ops': ops};

export { tex_cmd };
